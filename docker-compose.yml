version: '3.8'

services:
  zookeeper:
    image: zookeeper:3.9.0
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server=kafka:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  producer:
    build: ./producer
    container_name: producer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      POLL_INTERVAL_SECONDS: "10"

  processor:
    build: ./processor
    container_name: processor
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      INPUT_TOPIC: "api-raw-data"
      OUTPUT_TOPIC: "api-processed-data"

  consumer:
    build: ./consumer
    container_name: consumer
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      MONGO_URI: "mongodb://mongodb:27017"
      MONGO_DB: "crypto_db"
      MONGO_COLLECTION: "prices"
      INPUT_TOPIC: "api-processed-data"

volumes:
  mongo_data:
